---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: databaseusers.mysql.brightframe.com
spec:
  group: mysql.brightframe.com
  names:
    kind: DatabaseUser
    listKind: DatabaseUserList
    plural: databaseusers
    singular: databaseuser
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseUser is the Schema for the databaseusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseUserSpec defines the desired state of DatabaseUser
            properties:
              adminConnection:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              databasePermissions:
                description: Currently set to allow all via GRANT ALL PRIVILEGES for
                  the databases listed here
                items:
                  properties:
                    databaseName:
                      type: string
                  required:
                  - databaseName
                  type: object
                nullable: true
                type: array
              identification:
                nullable: true
                properties:
                  authPlugin:
                    description: 'Relates to auth_plugin, See: MySQL CREATE USER'
                    type: string
                  authString:
                    description: 'Relates to auth_string, See: MySQL CREATE USER TODO:
                      We should watch this object, if it changes we can flush through
                      a new password/token.'
                    nullable: true
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    required:
                    - secretKeyRef
                    type: object
                  clearText:
                    default: true
                    description: Indicates stored authString is not already hashed
                      by the auth_plugin
                    type: boolean
                type: object
              username:
                description: 'TODO: Block or allow the rename of a user (currently
                  would just CREATE new one if changed)'
                type: string
            required:
            - adminConnection
            - username
            type: object
          status:
            description: DatabaseUserStatus defines the observed state of DatabaseUser
            properties:
              creationTime:
                description: Timestamp identifying when the database was successfully
                  created
                format: date-time
                nullable: true
                type: string
              databasePermissions:
                items:
                  properties:
                    databaseName:
                      type: string
                  required:
                  - databaseName
                  type: object
                nullable: true
                type: array
              grants:
                description: Identifies the current permissions of the user as indicated
                  by SHOW GRANTS
                items:
                  type: string
                nullable: true
                type: array
              identification:
                nullable: true
                properties:
                  authPlugin:
                    description: 'Relates to auth_plugin, See: MySQL CREATE USER'
                    type: string
                  authString:
                    description: 'Relates to auth_string, See: MySQL CREATE USER TODO:
                      We should watch this object, if it changes we can flush through
                      a new password/token.'
                    nullable: true
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    required:
                    - secretKeyRef
                    type: object
                  clearText:
                    default: true
                    description: Indicates stored authString is not already hashed
                      by the auth_plugin
                    type: boolean
                type: object
              identificationResourceVersion:
                nullable: true
                type: string
              message:
                description: Indicates current state, phase or issue
                type: string
              syncTime:
                format: date-time
                nullable: true
                type: string
              username:
                description: Indicates the current username we're working with in
                  the database.
                type: string
            required:
            - username
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
